@model DeviceShop.Web.ViewModels.DevicesViewComponentModel

<div data-bind="foreach: pagedData" class="row">
    <div class="col-sm-3 mb-4">
        <div class="card">
            <img class="card-img-top" data-bind="attr:{src: imageUrl}" alt="Card image" style="height:16em;">
            <div class="card-body min">
                <h6 class="card-title" data-bind="text: name"></h6>
                <p class="card-text">Short description</p>
                <a data-bind="attr:{href: 'Device?deviceId=' + id}" class="btn btn-primary float-left">View</a>
                <span class="float-right font-weight-bold">
                    <span data-bind="text: currency"></span>
                    <span data-bind="text: price"></span>
                </span>
            </div>
        </div>
    </div>
</div>

<nav>
    <ul class="pagination">
        <li class="page-item disabled">
            <span class="page-link" title="Previous" data-bind="click: previousPage">Previous</span>
        </li>
        <li class="page-item">
            <a class="page-link" href="#">1</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#">2</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#">3</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#">4</a>
        </li>
        <li class="page-item">
            <a class="page-link" href="#" title="Next" data-bind="click: nextPage">Next</a>
        </li>
    </ul>
</nav>

<script type="text/javascript">
    var DeviceViewModel = function () {
        var self = this;

        self.pageSize = ko.observable(@Model.PageSize);
        self.currentPage = ko.observable(0);
        self.pagedData = ko.observableArray();
        self.devices = ko.observableArray([]);

        self.page = ko.computed(function () {
            var pgsize = parseInt(self.pageSize(), 10),
                fisrt = pgsize * self.currentPage(),
                last = fisrt + pgsize;

            self.pagedData(self.devices.slice(fisrt, last));
        }, self);

        self.allPages = function () {
            var totalPages = self.devices().length / self.pageSize() || 1;
            return Math.ceil(totalPages);
        }

        self.nextPage = function () {
            if (self.currentPage() < self.allPages() - 1) {
                self.currentPage(this.currentPage() + 1);
            }
        }

        self.previousPage = function () {
            if (self.currentPage() > 0) {
                self.currentPage(this.currentPage() - 1);
                $(".pagination .page-item.active").removeClass("active").prev().addClass("active");
            }
        }

        var getDevices = function () {
            $.ajax({
                url: "http://localhost:64323/Device/@Model.RequestUrl",
                type: "GET",
                dataType: "json",
                contentType: "application/json;utf-8"
            }).done(function (resp) {
                self.devices(resp);
            }).fail(function (err) {
                alert("Error!! " + err.status + "  " + err.statusText);
            });
        }
        getDevices();

        $(".pagination .page-item").click(function () {
            $(this).siblings(".active").removeClass();
            $(this).addClass("active");
        });
    };
    ko.applyBindings(new DeviceViewModel());
</script>